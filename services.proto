syntax = "proto3";

package remote;

// functions definition
service PSIFunctions {
  rpc setup(AgreementReq) returns (AgreementRep) {}
  rpc encrypt(EncryptReq) returns (EncryptRep) {}
  rpc intersection(IntersectionReq) returns (IntersectionRep) {}
  rpc extraction(ExtractionReq) returns (ExtractionRep) {}
}

// encryption request with file to encrypt
message EncryptReq {
  string file_to_encrypt = 1;
  string file_ext = 2;
  string agreement_name = 3;
}

// ciphertext message
message Ciphertexts {
  repeated bytes cipher = 1;
}

// extraction request
message ExtractionReq {
  string agreement_name = 1;
  string computed_file = 2;
  string output_name = 3;
  string receiver_file_name = 4;
}

// extraction reply
message ExtractionRep{
  repeated string result = 1;
}



// encryption reply with receiver ciphertexts
message EncryptRep {
  Ciphertexts ciphertexts = 1;
}

// intersection request with result
message IntersectionReq {
  string name = 1;
  Ciphertexts computation_result = 2;
}

// intersection reply
message IntersectionRep {}

// sender request for setup
message AgreementReq {
  string name = 1;
  int64 poly_modulus_degree = 2;
  int64 plain_modulus = 3;
}

// receiver reply for setup
message AgreementRep {
  bytes pub = 1;
  bytes rel = 2;
  bytes par = 3;
}
